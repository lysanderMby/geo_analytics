version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - redis
    networks:
      - geo_analytics_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    depends_on:
      - backend
    networks:
      - geo_analytics_network

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - geo_analytics_network

  # Nginx for production-like routing (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - geo_analytics_network
    profiles:
      - production

volumes:
  redis_data:

networks:
  geo_analytics_network:
    driver: bridge

# Development override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
version: '3.8'

# Development-specific overrides
services:
  backend:
    environment:
      - DEBUG=true
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

  frontend:
    environment:
      - REACT_APP_DEBUG=true
    volumes:
      - ./frontend:/app
      - /app/node_modules 